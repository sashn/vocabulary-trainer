{"version":3,"sources":["components/Header.js","components/PracticeForm.js","components/Practice.js","components/EditWord.js","components/Word.js","components/List.js","components/AddManyWords.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","activeClassName","style","color","PracticeForm","words","useState","isSubmitted","setIsSubmitted","question","setQuestion","answer","setAnswer","guess","setGuess","isGuessCorrect","setIsGuessCorrect","buttonNextTask","useRef","inputText","nextTask","activeWords","filter","word","active","Math","floor","random","length","hangul","english","useEffect","current","focus","onSubmit","e","preventDefault","toLowerCase","disabled","type","value","height","paddingBottom","readOnly","ref","width","onClick","backgroundColor","placeholder","onChange","target","Practice","padding","emptyWord","id","romanized","EditWord","wordIn","submitHandler","setWord","checked","defaultProps","Word","activeClickHandler","editWord","deleteClickHandler","editMode","setEditMode","role","List","addWord","toggleActive","deleteWord","map","AddManyWords","addManyWords","wordsLines","setWordsLines","split","wordLine","hangulAndRomanized","push","App","a","manyWords","updatedWord","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.311d5fd7.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <header className=\"p-3 bg-dark text-white\">\r\n      <div className=\"container\">\r\n        <div className=\"d-flex justify-content-between\">\r\n\r\n          <div className=\"d-flex fs-1\">\r\n            <i className=\"bi-chat-quote me-3\"></i>\r\n            <div>vocabulary trainer</div>\r\n          </div>\r\n\r\n          <ul className=\"nav fs-3\">\r\n            <li>\r\n              <NavLink \r\n                to=\"/list\" \r\n                className=\"nav-link px-2\" \r\n                activeClassName=\"text-secondary\"\r\n                style={{ color: \"white\" }}\r\n              >\r\n                list\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink \r\n                to=\"/practice\" \r\n                className=\"nav-link px-2\" \r\n                activeClassName=\"text-secondary\"\r\n                style={{ color: \"white\" }}\r\n              >\r\n                practice\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useState, useEffect, useRef } from 'react';\r\n\r\nconst PracticeForm = ({ words }) => {\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [question, setQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  const [guess, setGuess] = useState('');\r\n  const [isGuessCorrect, setIsGuessCorrect] = useState(false);\r\n  const buttonNextTask = useRef(null);\r\n  const inputText = useRef(null);\r\n\r\n  const checkGuess = (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsSubmitted(true);\r\n    setIsGuessCorrect(guess.toLowerCase() === answer.toLowerCase());\r\n  }\r\n\r\n  const nextTask = () => {\r\n    const activeWords = words.filter((word) => word.active);\r\n    const word = activeWords[Math.floor(Math.random() * activeWords.length)];\r\n\r\n    if (typeof word !== 'undefined') {\r\n      setQuestion(word.hangul);\r\n      setAnswer(word.english);\r\n    }\r\n    setIsSubmitted(false);\r\n    setGuess('');\r\n    setIsGuessCorrect(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    nextTask();\r\n  }, [words]);\r\n\r\n  useEffect(() => {\r\n    if (isSubmitted) {\r\n      buttonNextTask.current.focus();\r\n    } else {\r\n      inputText.current.focus();\r\n    }\r\n  }, [isSubmitted]);\r\n\r\n  return (\r\n\r\n    <form onSubmit={ checkGuess }>\r\n      <p className=\"fs-1 p-3\">{ question }</p>\r\n      { isSubmitted ?\r\n        <>\r\n          <fieldset disabled=\"disabled\">\r\n            <input \r\n              type=\"text\" \r\n              className=\"form-control fs-4\" \r\n              value={ guess } \r\n              style={{ height: \"150px\", paddingBottom: \"110px\" }}\r\n              readOnly\r\n            />\r\n          </fieldset>\r\n          <div className=\"text-center\">\r\n            <button className=\"btn btn-secondary my-3\" ref={ buttonNextTask } style={{ width: \"150px\" }} onClick={ nextTask }>Next Word</button>\r\n          </div>\r\n          { isGuessCorrect ?\r\n            <p className=\"fs-4 p-3\" style={{ backgroundColor: \"PaleGreen\" }}>Right!</p>\r\n          :\r\n            <p className=\"fs-4 p-3\" style={{ backgroundColor: \"Salmon\" }}>Wrong! Right Answer: { answer }</p>\r\n          }\r\n        </>\r\n      :\r\n        <>\r\n          <input \r\n            type=\"text\" \r\n            className=\"form-control fs-4\" \r\n            placeholder=\"Type in Translation\" \r\n            value={ guess } \r\n            onChange={ (e) => setGuess(e.target.value) } \r\n            style={{ height: \"150px\", paddingBottom: \"110px\" }}\r\n            ref={ inputText }\r\n          />\r\n          <div className=\"text-center\">\r\n            <input type=\"submit\" value=\"Check\" className=\"btn btn-primary my-3\" style={{ width: \"150px\" }} />\r\n          </div>\r\n        </>\r\n      }\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default PracticeForm;\r\n","import PracticeForm from './PracticeForm'\r\n\r\nconst Practice = ({ words }) => {\r\n\r\n  return (\r\n\r\n    <div className=\"container\">\r\n      <div style={{ padding: '100px 300px' }}>\r\n        <PracticeForm words={ words } />\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Practice\r\n","import { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst emptyWord = {\r\n  id: '',\r\n  hangul: '',\r\n  romanized: '',\r\n  english: '',\r\n  active: true\r\n};\r\n\r\nconst EditWord = ({ wordIn, submitHandler }) => {\r\n  const [word, setWord] = useState(wordIn);\r\n\r\n  const setHangul = (e) => { setWord({...word, hangul: e.target.value }); }\r\n  const setRomanized = (e) => { setWord({...word, romanized: e.target.value }); }\r\n  const setEnglish = (e) => { setWord({...word, english: e.target.value }); }\r\n  const setActive = (e) => { setWord({...word, active: !word.active }); }\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    submitHandler(word);\r\n\r\n    setWord(emptyWord);\r\n  }\r\n  \r\n  return (\r\n    <form className=\"row faux-tr\" onSubmit={ onSubmit }>\r\n      <div className=\"col faux-td\"><input type=\"text\" value={ word.hangul } onChange={ setHangul } /></div>\r\n      <div className=\"col faux-td\"><input type=\"text\" value={ word.romanized } onChange={ setRomanized } /></div>\r\n      <div className=\"col faux-td\"><input type=\"text\" value={ word.english } onChange={ setEnglish } /></div>\r\n      <div className=\"col faux-td\">\r\n        <input type=\"checkbox\" checked={ word.active } className=\"form-check-input\" onChange={ setActive } />\r\n      </div>\r\n      <div className=\"col-4 faux-td\">\r\n        { word.id && <input type=\"hidden\" value={ word.id } /> }\r\n        <input type=\"submit\" value=\"Save Word\" className=\"btn btn-primary\" />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nEditWord.defaultProps = {\r\n  wordIn: emptyWord\r\n}\r\n\r\nexport default EditWord\r\n\r\n","import { useState } from 'react'\r\nimport EditWord from './EditWord'\r\n\r\nconst Word = ({ word, activeClickHandler, editWord, deleteClickHandler  }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const saveWord = (word) => {\r\n    editWord(word);\r\n    setEditMode(false);\r\n  }\r\n\r\n  return (\r\n    ( editMode ?\r\n      <EditWord wordIn={ word } submitHandler={ saveWord } />\r\n    :\r\n      <div className=\"row faux-tr\">\r\n        <div className=\"col faux-td\">{ word.hangul }</div>\r\n        <div className=\"col faux-td\">{ word.romanized }</div>\r\n        <div className=\"col faux-td\">{ word.english }</div>\r\n        <div className=\"col faux-td\">\r\n          <i \r\n            className=\"bi-eye-fill fs-3\" \r\n            style={{ color: (word.active ? \"green\" : \"red\") }} \r\n            onClick={ () => activeClickHandler(word.id) }\r\n            role=\"button\"\r\n          />\r\n        </div>\r\n        <div className=\"col faux-td\">\r\n          <i \r\n            className=\"bi-pencil-square fs-3\"\r\n            onClick={ () => setEditMode(true) }\r\n            role=\"button\"\r\n          />\r\n        </div>\r\n        <div className=\"col faux-td\">\r\n          <i \r\n            className=\"bi-trash fs-3\"\r\n            onClick={ () => deleteClickHandler(word.id) }\r\n            role=\"button\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Word\r\n","import Word from './Word'\r\nimport EditWord from './EditWord'\r\n\r\nconst List = ({ words, addWord, editWord, toggleActive, deleteWord }) => {\r\n  return (\r\n    <div className=\"container my-3\">\r\n      <div className=\"table\">\r\n        <div className=\"faux-thead fw-bold\">\r\n          <div className=\"row faux-tr\">\r\n            <div className=\"col faux-th\">hangul</div>\r\n            <div className=\"col faux-th\">romanized</div>\r\n            <div className=\"col faux-th\">english</div>\r\n            <div className=\"col faux-th\">active</div>\r\n            <div className=\"col faux-th\">edit</div>\r\n            <div className=\"col faux-th\">delete</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"faux-tbody\">\r\n          {words.map(word => <Word \r\n            key={word.id} \r\n            word={ word } \r\n            activeClickHandler={ toggleActive } \r\n            editWord={ editWord } \r\n            deleteClickHandler={ deleteWord } \r\n          />)}\r\n          <EditWord submitHandler={ addWord } />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { useState } from 'react';\r\n\r\nconst AddManyWords = ({ addManyWords }) => {\r\n  const [wordsLines, setWordsLines] = useState('');\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const words = [];\r\n\r\n    wordsLines.split('\\n').map((wordLine) => {\r\n      const [hangulAndRomanized, english] = wordLine.split(' - ');\r\n      const [hangul, romanized,] = hangulAndRomanized.split(/\\ \\(|\\)/);\r\n\r\n      if (hangul && english && romanized) {\r\n        words.push({\r\n          hangul: hangul,\r\n          english: english,\r\n          romanized: romanized,\r\n          active: true\r\n        });\r\n      }\r\n    });\r\n\r\n    addManyWords(words);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container my-5\">\r\n      <form onSubmit={ onSubmit }>\r\n\r\n        <textarea \r\n          className=\"form-control fs-4\" \r\n          value={ wordsLines } \r\n          placeholder={ \"Paste lines of words in format:\\n안녕하세요 (annyeonghaseyo) - hello\" } \r\n          style={{ height: \"150px\" }}\r\n          onChange={ (e) => setWordsLines(e.target.value) } \r\n        />\r\n\r\n        <div className=\"text-center\">\r\n          <input type=\"submit\" value=\"Add Words\" className=\"btn btn-primary my-3\" style={{ width: \"150px\" }} />\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddManyWords\r\n","import { useState, useEffect } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Practice from './components/Practice';\nimport List from './components/List';\nimport AddManyWords from './components/AddManyWords';\n\nfunction App() {\n  const [words, setWords] = useState([]);\n\n  const serverUrl = 'http://localhost:5000/words/';\n\n  const fetchWords = async () => {\n    const res = await fetch(serverUrl);\n    const data = await res.json();\n    return data;\n  }\n\n  const postWord = async (word) => {\n  }\n\n  const addWord = async (word) => {\n  }\n\n  const addManyWords = async (manyWords) => {\n  }\n\n  const toggleActive = async (id) => {\n  }\n\n  const editWord = async (updatedWord) => {\n  }\n\n  const deleteWord = async (id) => {\n  }\n\n  return (\n    <Router>\n      <Route exact path=\"/\">\n        <Redirect to=\"/list\" />\n      </Route>\n      <Header />\n      <Switch>\n        <Route path=\"/list\">\n          <AddManyWords addManyWords={ addManyWords } />\n          <List \n            words={ words } \n            addWord={ addWord } \n            editWord={ editWord } \n            toggleActive={ toggleActive } \n            deleteWord={ deleteWord }\n          />\n        </Route>\n        <Route path=\"/practice\">\n          <Practice words={ words } />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}